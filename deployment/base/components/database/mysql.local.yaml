apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: kubernetes.io/basic-auth
stringData:
  password: root
---
apiVersion: apps/v1
kind:  Deployment
metadata:
  name: mysql-deployment
  labels:
    app: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      volumes:
        - name: data
          hostPath:
            path: /data/mysql
            type: DirectoryOrCreate
        - name: init
          hostPath:
            path: /data/mysql-init
            type: DirectoryOrCreate
      containers:
        - name: mysql
          image: mysql:8.1.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  password="$MYSQL_ROOT_PASSWORD"
                  if /usr/bin/mysql --user=root --password="$password" --execute "SHOW DATABASES;"; then
                    exit 0
                  else
                    exit 1
                  fi
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  password="$MYSQL_ROOT_PASSWORD"
                  if /usr/bin/mysql --user=root --password="$password" --execute "SHOW DATABASES;"; then
                    exit 0
                  else
                    exit 1
                  fi
            initialDelaySeconds: 60
            periodSeconds: 30
          ports:
            - containerPort: 3306
          volumeMounts:
            - mountPath: "/var/lib/mysql"
              name: data
            - mountPath: "/docker-entrypoint-initdb.d"
              name: init
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  labels:
    app: mysql
spec:
  type: NodePort
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
